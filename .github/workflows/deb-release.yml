name: Build Debian Packages

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: read

jobs:
  build-deb:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Replace sources.list for multi-arch
        run: |
          sudo dpkg --add-architecture arm64
          sudo tee /etc/apt/sources.list.d/ubuntu.sources > /dev/null <<EOF
          Types: deb
          URIs: http://archive.ubuntu.com/ubuntu
          Suites: noble noble-updates noble-backports noble-security
          Components: main restricted universe multiverse
          Architectures: amd64
          Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg

          Types: deb
          URIs: http://ports.ubuntu.com/ubuntu-ports
          Suites: noble noble-updates noble-backports noble-security
          Components: main restricted universe multiverse
          Architectures: arm64
          Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg
          EOF
          cat /etc/apt/sources.list.d/ubuntu.sources
          sudo apt update

      - name: Add target and deps
        run: |
          sudo apt install libssl-dev gcc-aarch64-linux-gnu libssl-dev:arm64 pkg-config
          rustup target add ${{ matrix.target }}

      - name: Install cargo-deb
        run: cargo install cargo-deb

      - name: Setup arm variables
        run: |
          if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
            echo "OPENSSL_INCLUDE_DIR=/usr/include/aarch64-linux-gnu" >> $GITHUB_ENV
            echo "OPENSSL_DIR=/usr/include/aarch64-linux-gnu" >> $GITHUB_ENV
            echo "OPENSSL_LIB_DIR=/usr/lib/aarch64-linux-gnu" >> $GITHUB_ENV
            echo "PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig" >> $GITHUB_ENV
            mkdir -p .cargo
            echo '[target.aarch64-unknown-linux-gnu]' > .cargo/config.toml
            echo 'linker = "aarch64-linux-gnu-gcc"' >> .cargo/config.toml
          fi

      - name: Build Debian package
        run: |
          cargo build --release --target ${{ matrix.target }}
          cargo deb --target ${{ matrix.target }}

      - name: Upload .deb artifact
        uses: actions/upload-artifact@v4
        with:
          name: deb-${{ matrix.target }}
          path: target/${{ matrix.target }}/debian/*.deb

  release:
    needs: build-deb
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/**/*.deb
